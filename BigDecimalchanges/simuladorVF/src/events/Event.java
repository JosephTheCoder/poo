/*
 * File Name : Event.java
 * Package : events
 * 
 * Description: Abstract class which takes care of implementing the generic event.
 * 
 * Authors: José Correia
 * 			Pedro Soares
 * 			Tiago Santos
 * 
 * Date: 11 May 2018 
 */

package events;

import java.math.*;

import individual.*;

import java.util.PriorityQueue;

import grid.*;

//Abstract class Event 
public abstract class Event {

	//Fields
	private BigDecimal time;
	protected Individual ind;
	
	//Constructor
	public Event(BigDecimal time,Individual ind) {
		this.time=time;
		this.ind=ind;
	}
	
	/*
	 * Function name : getTime
	 * Entries : 
	 * Return :Returns a BigDecimal 
	 * Description : This function Returns a BigDecimal with the time of the Event in question.
	 * 
	 */
	public BigDecimal getTime() {
		
		return this.time;
	}
	
	/*
	 * Function name : getIndividual
	 * Entries : 
	 * Return :Returns an Individual
	 * Description : This function returns the Individual associated with the event in question.
	 * 
	 */
	public Individual getIndividual() {
		return this.ind;
	}
	
	/*
	 * Function name : action
	 * Entries : map , world , Eventlist , confort_sensitivity , final point , all event parameters
	 * Return : It returns a BigDecimal number which represents the time wich this event is taking place
	 * Description : Abstract implementation of the action function wich is going to be overriden by each event in their own way. 
	 * 
	 */
	public abstract BigDecimal action(Grid map ,Population world , PriorityQueue<Event> Eventlist, int confort_sensitivity,  int[] dest,int[]genericparams );

	/*
	 * Function name : toString
	 * Entries : 
	 * Return : It returns the print type of an event.
	 * Description : This function is generated by eclipse in order to print the event in a simpler manner .
	 * 
	 */
	@Override
	public String toString() {
		return "Event [time=" + time.toString() + ", ind=" + ind + "]";
	}
	
	
																							
}
